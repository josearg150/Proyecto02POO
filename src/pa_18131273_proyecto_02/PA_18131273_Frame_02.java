
package pa_18131273_proyecto_02;
import Utilerias.JTable.ColorCeldas;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.util.Random;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Jose angel
 */
public class PA_18131273_Frame_02 extends javax.swing.JFrame {

    /**
     * Creates new form PA_18131273_Frame_02
     */

    DefaultTableModel modelo;
    Cultivo []cosechas;//Arreglo para todos los cultivo
    Cultivo resultante; //Produccion de cultivos para labels totales
    boolean botonMayMen= false; //variable para saber si el boton mayor y menor ya fue presionado, evita que el color se quede estatico
                                            //en caso de ordenar por alfabeto o descendente
     boolean calculosHechos = false;//Variable para saber si el boton calcular ha sido presionado
    public PA_18131273_Frame_02() {
        initComponents();
        jTableCultivos.setShowGrid(true);
        jButMayorMenor.setEnabled(false);//desactivar boton mayor menor a menos que se presione el boton calcular,  ya que "el programa aun no debe de saber que produccion es
                                                      //menor y cual es mayor" si no se han realizado los calculos
        
    }
    //Establecer icono
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("pa_18131273_proyecto_02/icono.jpg"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCultivos = new javax.swing.JTable();
        Procumenor = new javax.swing.JLabel();
        ProducMayor = new javax.swing.JLabel();
        ProducMensual = new javax.swing.JLabel();
        ProducInicial = new javax.swing.JLabel();
        Producfinal = new javax.swing.JLabel();
        dimension = new javax.swing.JLabel();
        jButAlfabetico = new javax.swing.JButton();
        jButDescendente = new javax.swing.JButton();
        jButMayorMenor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButEjemplos = new javax.swing.JButton();
        orden = new javax.swing.JLabel();
        jSpinCultivos = new javax.swing.JSpinner();
        jButAleatorios = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabTotalLibra = new javax.swing.JLabel();
        jLabTotalTonelada = new javax.swing.JLabel();
        jLabTotalQuintal = new javax.swing.JLabel();
        jLabTotalArroba = new javax.swing.JLabel();
        jLabToneladasTotalFinal = new javax.swing.JLabel();
        jLabQuintalTotalFinal = new javax.swing.JLabel();
        jLabArrobaTotalFinal = new javax.swing.JLabel();
        jLabLibraTotalFinal = new javax.swing.JLabel();
        jLabLibraMensualTotal = new javax.swing.JLabel();
        jLabArrobaMensualTotal = new javax.swing.JLabel();
        jLabQuintalMensualTotal = new javax.swing.JLabel();
        jLabToneladaMensualTotal = new javax.swing.JLabel();
        jButCalcular = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabImporteTotal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Imagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PA_18131273_Proyecto_02");
        setIconImage(getIconImage());
        setResizable(false);
        getContentPane().setLayout(null);

        jTableCultivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cultivo", "Tonelada", "Quintal", "Arroba", "Libra", "Tonelada", "Quintal", "Arroba", "Libra", "Tonelada", "Quintal", "Arroba", "Libra", "Precio x libra", "Importe total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, true, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableCultivos);
        if (jTableCultivos.getColumnModel().getColumnCount() > 0) {
            jTableCultivos.getColumnModel().getColumn(0).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTableCultivos.getColumnModel().getColumn(1).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(2).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(3).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(4).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(5).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(6).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(7).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(8).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(9).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(10).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(11).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(12).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(13).setResizable(false);
            jTableCultivos.getColumnModel().getColumn(14).setResizable(false);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 1220, 370);

        Procumenor.setBackground(new java.awt.Color(255, 255, 51));
        Procumenor.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        Procumenor.setForeground(new java.awt.Color(0, 0, 0));
        Procumenor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Procumenor.setText("Producción menor");
        Procumenor.setOpaque(true);
        getContentPane().add(Procumenor);
        Procumenor.setBounds(1000, 30, 160, 20);

        ProducMayor.setBackground(new java.awt.Color(102, 255, 255));
        ProducMayor.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        ProducMayor.setForeground(new java.awt.Color(0, 0, 0));
        ProducMayor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProducMayor.setText("Producción mayor");
        ProducMayor.setOpaque(true);
        getContentPane().add(ProducMayor);
        ProducMayor.setBounds(1000, 10, 160, 20);

        ProducMensual.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ProducMensual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProducMensual.setText("Producción mensual");
        ProducMensual.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.darkGray, null));
        ProducMensual.setOpaque(true);
        getContentPane().add(ProducMensual);
        ProducMensual.setBounds(760, 60, 320, 20);

        ProducInicial.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ProducInicial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProducInicial.setText("Producción inicial");
        ProducInicial.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.darkGray, null));
        ProducInicial.setOpaque(true);
        getContentPane().add(ProducInicial);
        ProducInicial.setBounds(130, 60, 310, 20);

        Producfinal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Producfinal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Producfinal.setText("Producción final");
        Producfinal.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.darkGray, null));
        Producfinal.setOpaque(true);
        getContentPane().add(Producfinal);
        Producfinal.setBounds(440, 60, 320, 20);

        dimension.setBackground(new java.awt.Color(102, 255, 102));
        dimension.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        dimension.setForeground(new java.awt.Color(0, 0, 0));
        dimension.setText("No.Cultivos");
        dimension.setOpaque(true);
        getContentPane().add(dimension);
        dimension.setBounds(30, 20, 80, 20);

        jButAlfabetico.setText("Alfabético");
        jButAlfabetico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAlfabeticoActionPerformed(evt);
            }
        });
        getContentPane().add(jButAlfabetico);
        jButAlfabetico.setBounds(580, 20, 100, 25);

        jButDescendente.setText("Descendente");
        jButDescendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButDescendenteActionPerformed(evt);
            }
        });
        getContentPane().add(jButDescendente);
        jButDescendente.setBounds(700, 20, 110, 25);

        jButMayorMenor.setText("Mayor y menor");
        jButMayorMenor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButMayorMenorActionPerformed(evt);
            }
        });
        getContentPane().add(jButMayorMenor);
        jButMayorMenor.setBounds(830, 20, 160, 30);

        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 60, 110, 20);

        jButEjemplos.setText("Ejemplos");
        jButEjemplos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButEjemplosActionPerformed(evt);
            }
        });
        getContentPane().add(jButEjemplos);
        jButEjemplos.setBounds(290, 20, 90, 25);

        orden.setBackground(new java.awt.Color(102, 255, 102));
        orden.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        orden.setForeground(new java.awt.Color(0, 0, 0));
        orden.setText("Ordenamientos");
        orden.setOpaque(true);
        getContentPane().add(orden);
        orden.setBounds(640, 0, 100, 20);

        jSpinCultivos.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinCultivos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinCultivosStateChanged(evt);
            }
        });
        getContentPane().add(jSpinCultivos);
        jSpinCultivos.setBounds(110, 20, 50, 20);

        jButAleatorios.setText("Aleatorios");
        jButAleatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAleatoriosActionPerformed(evt);
            }
        });
        getContentPane().add(jButAleatorios);
        jButAleatorios.setBounds(180, 20, 100, 25);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(140, 500, 70, 0);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Totales");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 450, 100, 20);

        jLabTotalLibra.setBackground(new java.awt.Color(255, 255, 255));
        jLabTotalLibra.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabTotalLibra.setForeground(new java.awt.Color(0, 0, 0));
        jLabTotalLibra.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabTotalLibra.setOpaque(true);
        getContentPane().add(jLabTotalLibra);
        jLabTotalLibra.setBounds(360, 450, 80, 20);

        jLabTotalTonelada.setBackground(new java.awt.Color(255, 255, 255));
        jLabTotalTonelada.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabTotalTonelada.setForeground(new java.awt.Color(0, 0, 0));
        jLabTotalTonelada.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabTotalTonelada.setOpaque(true);
        getContentPane().add(jLabTotalTonelada);
        jLabTotalTonelada.setBounds(120, 450, 80, 20);

        jLabTotalQuintal.setBackground(new java.awt.Color(255, 255, 255));
        jLabTotalQuintal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabTotalQuintal.setForeground(new java.awt.Color(0, 0, 0));
        jLabTotalQuintal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabTotalQuintal.setOpaque(true);
        getContentPane().add(jLabTotalQuintal);
        jLabTotalQuintal.setBounds(200, 450, 80, 20);

        jLabTotalArroba.setBackground(new java.awt.Color(255, 255, 255));
        jLabTotalArroba.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabTotalArroba.setForeground(new java.awt.Color(0, 0, 0));
        jLabTotalArroba.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabTotalArroba.setOpaque(true);
        getContentPane().add(jLabTotalArroba);
        jLabTotalArroba.setBounds(280, 450, 80, 20);

        jLabToneladasTotalFinal.setBackground(new java.awt.Color(255, 255, 255));
        jLabToneladasTotalFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabToneladasTotalFinal.setForeground(new java.awt.Color(0, 0, 0));
        jLabToneladasTotalFinal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabToneladasTotalFinal.setOpaque(true);
        getContentPane().add(jLabToneladasTotalFinal);
        jLabToneladasTotalFinal.setBounds(440, 450, 80, 20);

        jLabQuintalTotalFinal.setBackground(new java.awt.Color(255, 255, 255));
        jLabQuintalTotalFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabQuintalTotalFinal.setForeground(new java.awt.Color(0, 0, 0));
        jLabQuintalTotalFinal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabQuintalTotalFinal.setOpaque(true);
        getContentPane().add(jLabQuintalTotalFinal);
        jLabQuintalTotalFinal.setBounds(520, 450, 80, 20);

        jLabArrobaTotalFinal.setBackground(new java.awt.Color(255, 255, 255));
        jLabArrobaTotalFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabArrobaTotalFinal.setForeground(new java.awt.Color(0, 0, 0));
        jLabArrobaTotalFinal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabArrobaTotalFinal.setOpaque(true);
        getContentPane().add(jLabArrobaTotalFinal);
        jLabArrobaTotalFinal.setBounds(600, 450, 80, 20);

        jLabLibraTotalFinal.setBackground(new java.awt.Color(255, 255, 255));
        jLabLibraTotalFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabLibraTotalFinal.setForeground(new java.awt.Color(0, 0, 0));
        jLabLibraTotalFinal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabLibraTotalFinal.setOpaque(true);
        getContentPane().add(jLabLibraTotalFinal);
        jLabLibraTotalFinal.setBounds(680, 450, 80, 20);

        jLabLibraMensualTotal.setBackground(new java.awt.Color(255, 255, 255));
        jLabLibraMensualTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabLibraMensualTotal.setForeground(new java.awt.Color(0, 0, 0));
        jLabLibraMensualTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabLibraMensualTotal.setOpaque(true);
        getContentPane().add(jLabLibraMensualTotal);
        jLabLibraMensualTotal.setBounds(990, 450, 80, 20);

        jLabArrobaMensualTotal.setBackground(new java.awt.Color(255, 255, 255));
        jLabArrobaMensualTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabArrobaMensualTotal.setForeground(new java.awt.Color(0, 0, 0));
        jLabArrobaMensualTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabArrobaMensualTotal.setOpaque(true);
        getContentPane().add(jLabArrobaMensualTotal);
        jLabArrobaMensualTotal.setBounds(920, 450, 70, 20);

        jLabQuintalMensualTotal.setBackground(new java.awt.Color(255, 255, 255));
        jLabQuintalMensualTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabQuintalMensualTotal.setForeground(new java.awt.Color(0, 0, 0));
        jLabQuintalMensualTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabQuintalMensualTotal.setOpaque(true);
        getContentPane().add(jLabQuintalMensualTotal);
        jLabQuintalMensualTotal.setBounds(840, 450, 80, 20);

        jLabToneladaMensualTotal.setBackground(new java.awt.Color(255, 255, 255));
        jLabToneladaMensualTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabToneladaMensualTotal.setForeground(new java.awt.Color(0, 0, 0));
        jLabToneladaMensualTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabToneladaMensualTotal.setOpaque(true);
        getContentPane().add(jLabToneladaMensualTotal);
        jLabToneladaMensualTotal.setBounds(760, 450, 80, 20);

        jButCalcular.setText("Calcular Totales");
        jButCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButCalcularActionPerformed(evt);
            }
        });
        getContentPane().add(jButCalcular);
        jButCalcular.setBounds(410, 20, 130, 25);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pa_18131273_proyecto_02/asignacion.png"))); // NOI18N
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 470, 326, 195);

        jLabImporteTotal.setBackground(new java.awt.Color(255, 255, 255));
        jLabImporteTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabImporteTotal.setForeground(new java.awt.Color(0, 0, 0));
        jLabImporteTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        jLabImporteTotal.setOpaque(true);
        getContentPane().add(jLabImporteTotal);
        jLabImporteTotal.setBounds(1140, 450, 100, 20);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pa_18131273_proyecto_02/datos.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(910, 480, 320, 150);

        Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pa_18131273_proyecto_02/fondoCultivo.jpg"))); // NOI18N
        Imagen.setOpaque(true);
        getContentPane().add(Imagen);
        Imagen.setBounds(0, -10, 1270, 740);

        setBounds(0, 0, 1275, 706);
    }// </editor-fold>//GEN-END:initComponents
    
    public void mostrar(){
        DecimalFormat f = new DecimalFormat("######.##"); 
        for(int r = 0; r < modelo.getRowCount(); r++){
            jTableCultivos.setValueAt(cosechas[r].getNombre(), r, 0);//Asignar nombre a cultivo
            //Asignar valores al arreglo cultivo en sus producciones iniciales
            jTableCultivos.setValueAt(cosechas[r].getProduccionInicial().getTonelada(), r, 1);
            jTableCultivos.setValueAt(cosechas[r].getProduccionInicial().getQuintal(), r, 2);
            jTableCultivos.setValueAt(cosechas[r].getProduccionInicial().getArroba(), r, 3);
            jTableCultivos.setValueAt(cosechas[r].getProduccionInicial().getLibra(), r, 4);
            //Asignar valores al arreglo cultivo en sus producciones finales
            jTableCultivos.setValueAt(cosechas[r].getProduccionFinal().getTonelada(), r, 5);
            jTableCultivos.setValueAt(cosechas[r].getProduccionFinal().getQuintal(), r, 6);
            jTableCultivos.setValueAt(cosechas[r].getProduccionFinal().getArroba(), r, 7);
            jTableCultivos.setValueAt(cosechas[r].getProduccionFinal().getLibra(), r, 8);
            
            jTableCultivos.setValueAt(cosechas[r].getPrecio(), r, 13);//Asignar precio a cultivo
            if(calculosHechos){//Comprobar si se ha presionado el boton calcular para ordenar los calculos
            //Calcular valores de las producciones mensuales
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getTonelada(), r, 9);
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getQuintal(), r, 10);
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getArroba(), r, 11);
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getLibra(), r, 12);
            
            jTableCultivos.setValueAt(f.format( cosechas[r].obtenerImporte()),r,14);//Calcular importe
            }        
        }
    }
   
    public void obtenerDatos(){    
        cosechas = new Cultivo[modelo.getRowCount()];//Asignar dimension al arreglo de cultivos 
        Produccion inicial = new Produccion(), fin = new Produccion(); //producciones final e inicial
        resultante = new Cultivo();//Variable para valores totales
        for(int r = 0; r < cosechas.length; r++){//Asignamos los datos del jtable a los objetos cultivo incial y final
          
            inicial.setTonelada(Integer.parseInt(modelo.getValueAt(r, 1)+"" ));//Colocar valores a produccion inicial
            inicial.setQuintal(Integer.parseInt(modelo.getValueAt(r, 2)+"" ));
            inicial.setArroba(Integer.parseInt(modelo.getValueAt(r, 3)+"" ));
            inicial.setLibra(Integer.parseInt(modelo.getValueAt(r, 4)+"" ));
            
            fin.setTonelada(Integer.parseInt(modelo.getValueAt(r, 5)+"" ));//Colocar valores a produccion final
            fin.setQuintal(Integer.parseInt(modelo.getValueAt(r, 6)+"" ));
            fin.setArroba(Integer.parseInt(modelo.getValueAt(r, 7)+"" ));
            fin.setLibra(Integer.parseInt(modelo.getValueAt(r, 8)+"" ));
 
            cosechas[r] = new Cultivo(jTableCultivos.getValueAt(r, 0)+"", inicial, fin, Double.parseDouble(jTableCultivos.getValueAt(r, 13)+"") );//creamos un objeto Cultivo con los 
                                                                                                                                                                                                //objetos inicial y final ademas del precio y nombre
            resultante.setProduccionInicial(resultante.getProduccionInicial().sumar(cosechas[r].getProduccionInicial()));//Sumar las producciones iniciales
            resultante.setProduccionFinal(resultante.getProduccionFinal().sumar(cosechas[r].getProduccionFinal()) );//Sumar las producciones finales                                                                                                                                                                                  
        }
 
    }
    
    private void jButDescendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButDescendenteActionPerformed
        obtenerDatos();//Obtener datos de la tabla y asignarlos al arreglo cultivo
        for(int i=0 ; i < cosechas.length ; i++)
            for(int j= i+1 ; j < cosechas.length; j++)
                if(cosechas[i].produccionMensual().librasTotales() < cosechas[j].produccionMensual().librasTotales()){
                    Cultivo aux = cosechas[i];
                    cosechas[i] = cosechas[j];
                    cosechas[j] = aux;
                }
        mostrar();
        if(botonMayMen)//comprobar si el boton mayor menor ha sido presionado
            jButMayorMenorActionPerformed(evt);//realizar accion de boton para agregar colores en el nuevo orden

        
    }//GEN-LAST:event_jButDescendenteActionPerformed

    private void jSpinCultivosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinCultivosStateChanged
        modelo = (DefaultTableModel)jTableCultivos.getModel();//Obtener modelo de la tabla
        modelo.setRowCount( (int)jSpinCultivos.getValue() );//Establecer numero de renglones
        
        //Resetar tabla en caso de que tenga valores establecidos
        for(int r = 0; r < modelo.getRowCount(); r++)
            for(int c= 0;  c < modelo.getColumnCount(); c++)
                jTableCultivos.setValueAt("",r,c) ;  
        
        if(botonMayMen){//Comprobar si hay color en celdas, y luego quitarlo
           ColorCeldas quitarColor = new ColorCeldas(jTableCultivos);
           for(int r = 0 ; r < modelo.getRowCount(); r++)
               for(int c = 0; c < modelo.getColumnCount(); c++)
                    quitarColor.addCelda(r, c, Color.white);
        }
            

    }//GEN-LAST:event_jSpinCultivosStateChanged

    private void jButEjemplosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButEjemplosActionPerformed
           if(botonMayMen){//Comprobar si hay color en celdas, y luego quitarlo
           ColorCeldas quitarColor = new ColorCeldas(jTableCultivos);
           for(int r = 0 ; r < modelo.getRowCount(); r++)
               for(int c = 0; c < modelo.getColumnCount(); c++)
                    quitarColor.addCelda(r, c, Color.white);
        }   
       modelo = (DefaultTableModel)jTableCultivos.getModel();//obtener modelo de la tabla
       jSpinCultivos.setValue(4);//Establecer numero 4 en spinner
       modelo.setRowCount(4);//Establecer 4 renglones
       //Establecer valores de ejemplos
       //Ejemplo 1
        jTableCultivos.setValueAt("Arroz", 0, 0);
        //Produccion inicial
        jTableCultivos.setValueAt(7, 0, 1);
        jTableCultivos.setValueAt(18, 0, 2);
        jTableCultivos.setValueAt(2, 0, 3);
        jTableCultivos.setValueAt(22, 0, 4);
        
        //Produccion final
        jTableCultivos.setValueAt(9, 0, 5);
        jTableCultivos.setValueAt(8, 0, 6);
        jTableCultivos.setValueAt(2, 0, 7);
        jTableCultivos.setValueAt(15, 0, 8);
        
        //precio
        jTableCultivos.setValueAt(2.58, 0, 13);
        
        //Ejemplo 2
         jTableCultivos.setValueAt("Trigo", 1, 0);
        //Produccion inicial
        jTableCultivos.setValueAt(17, 1, 1);
        jTableCultivos.setValueAt(7, 1, 2);
        jTableCultivos.setValueAt(1, 1, 3);
        jTableCultivos.setValueAt(12, 1, 4);
        
        //Produccion final
        jTableCultivos.setValueAt(22, 1, 5);
        jTableCultivos.setValueAt(18, 1, 6);
        jTableCultivos.setValueAt(3, 1, 7);
        jTableCultivos.setValueAt(22, 1, 8);   
        
        //precio
        jTableCultivos.setValueAt(1.18, 1, 13);
        
        //Ejemplo 3
                jTableCultivos.setValueAt("Maiz", 2, 0);
        //Produccion inicial
        jTableCultivos.setValueAt(24, 2, 1);
        jTableCultivos.setValueAt(5, 2, 2);
        jTableCultivos.setValueAt(3, 2, 3);
        jTableCultivos.setValueAt(22, 2, 4);
        
        //Produccion final
        jTableCultivos.setValueAt(25, 2, 5);
        jTableCultivos.setValueAt(14, 2, 6);
        jTableCultivos.setValueAt(2, 2, 7);
        jTableCultivos.setValueAt(5, 2, 8); 
        
        //precio
        jTableCultivos.setValueAt(9.14, 2, 13);
        
        //Ejemplo 4
        jTableCultivos.setValueAt("Cebada", 3, 0);
        //Produccion inicial
        jTableCultivos.setValueAt(3, 3, 1);
        jTableCultivos.setValueAt(5, 3, 2);
        jTableCultivos.setValueAt(1, 3, 3);
        jTableCultivos.setValueAt(20, 3, 4);
        
        //Produccion final
        jTableCultivos.setValueAt(8, 3, 5);
        jTableCultivos.setValueAt(3, 3, 6);
        jTableCultivos.setValueAt(1, 3, 7);
        jTableCultivos.setValueAt(16, 3, 8);
        
        //precio
        jTableCultivos.setValueAt(5.76, 3, 13);
    }//GEN-LAST:event_jButEjemplosActionPerformed

    private void jButCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButCalcularActionPerformed
        obtenerDatos();//obtener datos para acomodar el valor de los cultivos
        DecimalFormat f = new DecimalFormat("######.##");    
        double sumaImportes = 0; // suma de todos los importes
        Produccion mensualTotal = new Produccion(); // Variable para almacenar los valores totales de las producciones mensuales
        
        for(int r = 0; r < modelo.getRowCount(); r++){//Establecer datos del arreglo en el jtable           
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getTonelada(), r, 9);
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getQuintal(), r, 10);
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getArroba(), r, 11);
            jTableCultivos.setValueAt(cosechas[r].produccionMensual().getLibra(), r, 12);
            jTableCultivos.setValueAt(f.format(cosechas[r].obtenerImporte()),r,14); // obtener importe y escribir valor en el jtable
            mensualTotal = mensualTotal.sumar(cosechas[r].produccionMensual());
            sumaImportes = sumaImportes + cosechas[r].obtenerImporte(); // sumar los valores de los importes y almacenarlos en la variable sumaImporte
            
        }  
          
         //Etiquetas totales de las producciones iniciales
        jLabTotalTonelada.setText(resultante.getProduccionInicial().getTonelada()+"");
        jLabTotalQuintal.setText(resultante.getProduccionInicial().getQuintal()+"");
        jLabTotalArroba.setText(resultante.getProduccionInicial().getArroba()+"");
        jLabTotalLibra.setText(resultante.getProduccionInicial().getLibra()+"");
        //Etiquetas totales de las producciones finales
        jLabToneladasTotalFinal.setText(resultante.getProduccionFinal().getTonelada()+"");
        jLabArrobaTotalFinal.setText(resultante.getProduccionFinal().getArroba()+"");
        jLabQuintalTotalFinal.setText(resultante.getProduccionFinal().getQuintal()+"");
        jLabLibraTotalFinal.setText(resultante.getProduccionFinal().getLibra()+"");
        //Etiqutas totales de las producciones mensuales
        jLabToneladaMensualTotal.setText((mensualTotal.getTonelada()+""));
        jLabQuintalMensualTotal.setText(mensualTotal.getQuintal()+"");
        jLabArrobaMensualTotal.setText(mensualTotal.getArroba()+"");
        jLabLibraMensualTotal.setText(mensualTotal.getLibra()+"");
        //Etiqueta total de los importes
        jLabImporteTotal.setText(f.format(sumaImportes));
        
        calculosHechos = true;//Establecer que el boton ya ha sido presionado
        
       jButMayorMenor.setEnabled(true);//Activamos el boton mayor y menor para que sea posible conocer las producciones mayor y menor, ya que ya se han realizado los calculos
                
    }//GEN-LAST:event_jButCalcularActionPerformed

    private void jButAleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAleatoriosActionPerformed
        botonMayMen = false;//Cambiamos el boton color a falso , para evitar que se colorea al ordenar de nuevo 
        calculosHechos = false;//Indicamos que los calculos no se han hecho ya que probablemente se haya resetado la tabla
        DecimalFormat f = new DecimalFormat("###.##");
        Random azar = new Random();
        String []nombres = {"Acelga","Ajíes","Ají pimiento grande","Ají pequeño","Ajo","Ajo porro","Apio","Berenjena","Calabaza","Cebolla","Chayote","Col","Espinaca",
                                   "Habichuela","Lechuga","Maíz","Tomate","Pepino","Rábano","Zanahoria","Frijol","Arroz","Soya"};
 
        for(int r = 0; r < jTableCultivos.getRowCount(); r++){
            jTableCultivos.setValueAt(nombres[azar.nextInt(nombres.length)], r, 0); //nombre aleatorio
            //Valores aleatorios para la produccion inicial
            jTableCultivos.setValueAt(azar.nextInt(51), r, 1);
            jTableCultivos.setValueAt(azar.nextInt(20), r, 2);
            jTableCultivos.setValueAt(azar.nextInt(4), r, 3);
            jTableCultivos.setValueAt(azar.nextInt(25), r, 4);
            
            //Valores aleatorios para la produccion final  
            jTableCultivos.setValueAt(azar.nextInt(51), r, 5);
            jTableCultivos.setValueAt(azar.nextInt(20), r, 6);
            jTableCultivos.setValueAt(azar.nextInt(4), r, 7);
            jTableCultivos.setValueAt(azar.nextInt(25), r, 8);
            //Comprobamos que los valores de la produccion final no sean menorer que los de la inicial para evitar valores negativos o errores
            while(Integer.parseInt( jTableCultivos.getValueAt(r, 5)+"") < Integer.parseInt(jTableCultivos.getValueAt(r, 1)+"")){
                 jTableCultivos.setValueAt(azar.nextInt(51), r, 5);
            }
            while(Integer.parseInt( jTableCultivos.getValueAt(r, 6)+"") < Integer.parseInt(jTableCultivos.getValueAt(r, 2)+"")){
                 jTableCultivos.setValueAt(azar.nextInt(20), r, 6);
            }
            while(Integer.parseInt( jTableCultivos.getValueAt(r, 7)+"") < Integer.parseInt(jTableCultivos.getValueAt(r, 3)+"")){
                 jTableCultivos.setValueAt(azar.nextInt(4), r, 7);
            }
            while(Integer.parseInt( jTableCultivos.getValueAt(r, 8)+"") < Integer.parseInt(jTableCultivos.getValueAt(r, 4)+"")){
                 jTableCultivos.setValueAt(azar.nextInt(25), r, 8);
            }
            double decimales = ((double)azar.nextInt(1001))/100;
           
            jTableCultivos.setValueAt(f.format( 1+azar.nextInt(10)+ decimales) ,r,13);//precio aleatorio con decimales
        }
     
    }//GEN-LAST:event_jButAleatoriosActionPerformed

    private void jButAlfabeticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAlfabeticoActionPerformed
       obtenerDatos();//obtener los datos para acomodar los nombres
       for(int i = 0 ; i < modelo.getRowCount()-1; i++)
           for(int j= i+1; j < modelo.getRowCount(); j++ )
               if(cosechas[i].getNombre().compareTo(cosechas[j].getNombre()) > 0){
                   Cultivo aux = cosechas[i];
                   cosechas[i] = cosechas[j];
                   cosechas[j] = aux;
               }
        mostrar();//mostrar el arreglo acomodado 
        if(botonMayMen )//comprobar si el boton mayor menor ha sido presionado para asignar correctamente los colores
            jButMayorMenorActionPerformed(evt);//realizar accion de boton para agregar colores en el nuevo orden

    }//GEN-LAST:event_jButAlfabeticoActionPerformed

    private void jButMayorMenorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButMayorMenorActionPerformed
        ColorCeldas mayorMenor = new ColorCeldas(jTableCultivos);//declarar el objeto para colorear
        int filas = 0;
        for(int i=0 ; i < cosechas.length ; i++)//Ordenar los datos en orden descendente para que sa mas facil encontrar el mayor y menor
            for(int j= i+1 ; j < cosechas.length; j++)
                if(cosechas[i].produccionMensual().librasTotales() < cosechas[j].produccionMensual().librasTotales()){
                    Cultivo aux = cosechas[i];
                    cosechas[i] = cosechas[j];
                    cosechas[j] = aux;
                }

        
            for(int a = 0; a<modelo.getRowCount(); a++)
            if(cosechas[0].getNombre().equals(jTableCultivos.getValueAt(a,0))){//Comparar si el nombre del cultivo mayor es igual al del jtable
                 while(filas < 15){//si se cumple la condicion anterior, iniciar un bucle hasta que llegue al numero total de columnas
                 mayorMenor.addCelda(a, filas, Color.cyan);//colorear numero de renglon que tenga el mismo valor que a y e incrementar contador para colorear todas las filas
                 mayorMenor.repaint();//Asegurar que se pintan las celdas
                 filas++;//aumentar la fila para colorear y llegar al limite de columnas
                 }
        }
        filas=0;//Establecer filas al valor de 0 y repetir el proceso anterior 
        for(int a = 0; a<modelo.getRowCount(); a++)
            if(cosechas[modelo.getRowCount()-1].getPrecio() ==  Double.parseDouble(jTableCultivos.getValueAt(a, 13)+"")){//Se compara el precio del ultimo objeto con con el del jtable
                 while(filas < 15){/////el proceso es igual al anterior
                 mayorMenor.addCelda(a, filas, Color.yellow);
                 mayorMenor.repaint();
                 filas++;
                 }
        }
        botonMayMen=true;//Establecer que el boton ya ha sido presionado
       
    }//GEN-LAST:event_jButMayorMenorActionPerformed

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PA_18131273_Frame_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PA_18131273_Frame_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PA_18131273_Frame_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PA_18131273_Frame_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PA_18131273_Frame_02().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Imagen;
    private javax.swing.JLabel Procumenor;
    private javax.swing.JLabel ProducInicial;
    private javax.swing.JLabel ProducMayor;
    private javax.swing.JLabel ProducMensual;
    private javax.swing.JLabel Producfinal;
    private javax.swing.JLabel dimension;
    private javax.swing.JButton jButAleatorios;
    private javax.swing.JButton jButAlfabetico;
    private javax.swing.JButton jButCalcular;
    private javax.swing.JButton jButDescendente;
    private javax.swing.JButton jButEjemplos;
    private javax.swing.JButton jButMayorMenor;
    private javax.swing.JLabel jLabArrobaMensualTotal;
    private javax.swing.JLabel jLabArrobaTotalFinal;
    private javax.swing.JLabel jLabImporteTotal;
    private javax.swing.JLabel jLabLibraMensualTotal;
    private javax.swing.JLabel jLabLibraTotalFinal;
    private javax.swing.JLabel jLabQuintalMensualTotal;
    private javax.swing.JLabel jLabQuintalTotalFinal;
    private javax.swing.JLabel jLabToneladaMensualTotal;
    private javax.swing.JLabel jLabToneladasTotalFinal;
    private javax.swing.JLabel jLabTotalArroba;
    private javax.swing.JLabel jLabTotalLibra;
    private javax.swing.JLabel jLabTotalQuintal;
    private javax.swing.JLabel jLabTotalTonelada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinCultivos;
    private javax.swing.JTable jTableCultivos;
    private javax.swing.JLabel orden;
    // End of variables declaration//GEN-END:variables
}
